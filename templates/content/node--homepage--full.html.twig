{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: Full node entity.
 *   - id: The node ID.
 *   - bundle: The type of the node, for example, "page" or "article".
 *   - authorid: The user ID of the node author.
 *   - createdtime: Time the node was published formatted in Unix timestamp.
 *   - changedtime: Time the node was changed formatted in Unix timestamp.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'grid-area-e',
    'mt-8',
  ]
%}

<div class="grid-area-a meta meta__bg meta--blue">
  <h2 class="heading-four normal-case text-white mt-4">Work with us. <span class="text-base font-normal">View
      all opportunities</span></h2>
  <p class="mb-4"><a href="#" class="unit-button unit-button--transparent unit-button--has-icon-right xl--text-lg">Faculty
      openings <svg role="presentation" class="unit-button__icon text-ubc-blue-neptune" viewBox="0 0 64 64">
        <use xlink:href="#icon-arrow-circle"></use>
      </svg></a>
    <a href="#" class="unit-button unit-button--transparent unit-button--has-icon-right xl--text-lg">Staff
      openings <svg role="presentation" class="unit-button__icon text-ubc-blue-neptune" viewBox="0 0 64 64">
        <use xlink:href="#icon-arrow-circle"></use>
      </svg></a>
  </p>
</div>

<div class="grid-area-c">
  <div class="tabcordion">
    <ul class="tabcordion__links">
      <li class="tabcordion__tab js-tabcordion__trigger is-active" data-tab="tab1"><button>{{ content.field_home_tab_titles[0] }}</button></li>
      <li class="tabcordion__tab js-tabcordion__trigger" data-tab="tab2"><button>{{ content.field_home_tab_titles[1] }}</button></li>
      <li class="tabcordion__tab js-tabcordion__trigger" data-tab="tab3"><button>{{ content.field_home_tab_titles[2] }}</button>
      </li>
    </ul>

    <div class="tabcordion__content-wrapper">
      <a class="tabcordion__heading js-tabcordion__trigger is-active" data-tab="tab1" href="#tab1" id="tab1">{{ content.field_home_tab_titles[0] }}</a>
      <div data-content="tab1" class="tabcordion__content is-active">
        {{ content.field_home_tab_content[0] }}
      </div>

      <a class="tabcordion__heading js-tabcordion__trigger" data-tab="tab2" href="#tab2" id="tab2">{{ content.field_home_tab_titles[1] }}</a>
      <div data-content="tab2" class="tabcordion__content">
        {{ content.field_home_tab_content[1] }}
      </div>

      <a class="tabcordion__heading js-tabcordion__trigger" data-tab="tab3" href="#tab3" id="tab3">{{ content.field_home_tab_titles[2] }}</a>
      <div data-content="tab3" class="tabcordion__content">
        {{ content.field_home_tab_content[2] }}
      </div>

    </div>
  </div>
</div>

<section class="grid-area-d md--flex md---mx-4 md--flex-wrap">
  {{ content.field_home_upper_cards }}
</section>

<div{{ attributes.addClass(classes) }}>
  {% if not node.isPublished() %}
    <div class="unpublished">Unpublished</div>
  {% endif %}
  {{ content.content_moderation_control }}
  <div class="text-lead text-ubc-blue has-content--before has-content--after pt-20 pb-8 pullquote--big my-16">{{ content.body }}</div>
</div>

<div class="grid-area-f md--flex md---mx-4">
  <p>{{ content.field_home_lower_cards }}</p>
  {% if content.links %}
    <div class="node__links">
      {{ content.links }}
    </div>
  {% endif %}
</div>
